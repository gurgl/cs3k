Server
00:16 DEBUG: [kryonet] Port 12345/TCP connected to: /192.168.1.1:57790
00:16 TRACE: [kryonet] Connection listener added: com.esotericsoftware.kryonet.Server$1
00:16 TRACE: [kryo] Write class 9: com.esotericsoftware.kryonet.FrameworkMessage$RegisterTCP
00:16 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$RegisterTCP
00:16 TRACE: [kryo] Write field: connectionID (com.esotericsoftware.kryonet.FrameworkMessage$RegisterTCP)
00:16 TRACE: [kryo] Write int: 1
00:16 TRACE: [kryo] Object graph complete.
00:16 TRACE: [kryonet] Connection 1 sent TCP: RegisterTCP (6)
00:16  INFO: [kryonet] Connection 1 connected: /192.168.1.1
00:16 TRACE: [kryo] Read class 15: se.bupp.cs3k.LobbyJoinRequest
00:16 TRACE: [kryo] Read field: name (se.bupp.cs3k.LobbyJoinRequest)
00:16 TRACE: [kryo] Read: asdf
00:16 TRACE: [kryo] Read field: userId (se.bupp.cs3k.LobbyJoinRequest)
00:16 TRACE: [kryo] Read: -1
00:16 DEBUG: [kryo] Read: se.bupp.cs3k.LobbyJoinRequest
00:16 TRACE: [kryo] Object graph complete.
00:16 DEBUG: [kryonet] Connection 1 received TCP: LobbyJoinRequest
19712 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - LobbyJoinRequest received
00:16 TRACE: [kryo] Write class 14: se.bupp.cs3k.LobbyJoinResponse
00:16 DEBUG: [kryo] Write: se.bupp.cs3k.LobbyJoinResponse
00:16 TRACE: [kryo] Write field: participantsRequired (se.bupp.cs3k.LobbyJoinResponse)
00:16 TRACE: [kryo] Write: 2
00:16 TRACE: [kryo] Object graph complete.
00:16 DEBUG: [kryonet] Connection 1 sent TCP: LobbyJoinResponse (6)
00:16 TRACE: [kryo] Write class 16: se.bupp.cs3k.ProgressUpdated
00:16 DEBUG: [kryo] Write: se.bupp.cs3k.ProgressUpdated
00:16 TRACE: [kryo] Write field: progress (se.bupp.cs3k.ProgressUpdated)
00:16 TRACE: [kryo] Write: 1
00:16 TRACE: [kryo] Object graph complete.
00:16 DEBUG: [kryonet] Connection 1 sent TCP: ProgressUpdated (6)
00:24 TRACE: [kryo] Read class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:24 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:24 TRACE: [kryo] Object graph complete.
00:24 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
27737 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@35886ba1
00:24 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:24 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:24 TRACE: [kryo] Object graph complete.
00:24 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
00:32 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:32 TRACE: [kryo] Object graph complete.
00:32 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
35762 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@f52327c
00:32 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:32 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:32 TRACE: [kryo] Object graph complete.
00:32 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
00:40 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:40 TRACE: [kryo] Object graph complete.
00:40 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
43787 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@5d7072bf
00:40 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:40 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:40 TRACE: [kryo] Object graph complete.
00:40 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
00:48 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:48 TRACE: [kryo] Object graph complete.
00:48 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
51815 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@17d8986
00:48 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:48 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:48 TRACE: [kryo] Object graph complete.
00:48 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
00:57 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:57 TRACE: [kryo] Object graph complete.
00:57 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
59838 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@58cfbd2d
00:57 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:57 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
00:57 TRACE: [kryo] Object graph complete.
00:57 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:05 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:05 TRACE: [kryo] Object graph complete.
01:05 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
67863 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@2e8d02e8
01:05 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:05 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:05 TRACE: [kryo] Object graph complete.
01:05 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:13 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:13 TRACE: [kryo] Object graph complete.
01:13 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
75889 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@6a7fe54c
01:13 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:13 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:13 TRACE: [kryo] Object graph complete.
01:13 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:21 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:21 TRACE: [kryo] Object graph complete.
01:21 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
83914 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@72a71733
01:21 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:21 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:21 TRACE: [kryo] Object graph complete.
01:21 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:29 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:29 TRACE: [kryo] Object graph complete.
01:29 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
91940 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@37e45013
01:29 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:29 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:29 TRACE: [kryo] Object graph complete.
01:29 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:37 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:37 TRACE: [kryo] Object graph complete.
01:37 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
99965 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@6e452c0f
01:37 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:37 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:37 TRACE: [kryo] Object graph complete.
01:37 TRACE: [kryonet] Connection 1 sent TCP: KeepAlive (5)
01:45 DEBUG: [kryo] Read: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:45 TRACE: [kryo] Object graph complete.
01:45 TRACE: [kryonet] Connection 1 received TCP: KeepAlive
107991 [Server] INFO  se.bupp.cs3k.server.ServerLobby  - uknown reccom.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@7f4fc557
01:45 TRACE: [kryo] Write class 11: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:45 DEBUG: [kryo] Write: com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive
01:45 TRACE: [kryo] Object graph complete.



Client

bef listener
00:00  INFO: Connecting: /81.235.61.31:12345
00:00 DEBUG: [kryonet] Port 57790/TCP connected to: /81.235.61.31:12345
00:00 DEBUG: [kryo] Read: RegisterTCP
00:00  INFO: [kryonet] Connection 1 connected: /81.235.61.31
00:00 DEBUG: [kryo] Write: LobbyJoinRequest
00:00 DEBUG: [kryonet] Connection 1 sent TCP: LobbyJoinRequest (10)
slut
00:00 DEBUG: [kryo] Read: LobbyJoinResponse
00:00 DEBUG: [kryonet] Connection 1 received TCP: LobbyJoinResponse
LobbyJoinResponse
00:00 DEBUG: [kryo] Read: ProgressUpdated
00:00 DEBUG: [kryonet] Connection 1 received TCP: ProgressUpdated
ProgressUpdated received
00:08 DEBUG: [kryo] Write: KeepAlive
00:08 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@192a848
00:16 DEBUG: [kryo] Write: KeepAlive
00:16 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@59a34
00:24 DEBUG: [kryo] Write: KeepAlive
00:24 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@33f0de
00:32 DEBUG: [kryo] Write: KeepAlive
00:32 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@53ab04
00:40 DEBUG: [kryo] Write: KeepAlive
00:40 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@f0b7f8
00:48 DEBUG: [kryo] Write: KeepAlive
00:48 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@80cac9
00:56 DEBUG: [kryo] Write: KeepAlive
00:56 DEBUG: [kryo] Read: KeepAlive
REC + com.esotericsoftware.kryonet.FrameworkMessage$KeepAlive@13e754f
01:04 DEBUG: [kryo] Write: KeepAlive
01:04 DEBUG: [kryo] Read: KeepAlive


---------------------------------



net.sourceforge.jnlp.LaunchException: Fatal: Read Error: Could not read or parse the JNLP file.
    at net.sourceforge.jnlp.Launcher.fromUrl(Launcher.java:491)
    at net.sourceforge.jnlp.Launcher.launch(Launcher.java:283)
    at net.sourceforge.jnlp.runtime.Boot.run(Boot.java:202)
    at net.sourceforge.jnlp.runtime.Boot.run(Boot.java:51)
    at java.security.AccessController.doPrivileged(Native Method)
    at net.sourceforge.jnlp.runtime.Boot.main(Boot.java:168)
Caused by: net.sourceforge.jnlp.ParseException: Invalid XML document syntax.
    at net.sourceforge.jnlp.Parser.getRootNode(Parser.java:1305)
    at net.sourceforge.jnlp.JNLPFile.<init>(JNLPFile.java:206)
    at net.sourceforge.jnlp.JNLPFile.<init>(JNLPFile.java:190)
    at net.sourceforge.jnlp.JNLPFile.<init>(JNLPFile.java:175)
    at net.sourceforge.jnlp.JNLPFile.<init>(JNLPFile.java:161)
    at net.sourceforge.jnlp.Launcher.fromUrl(Launcher.java:477)
    ... 5 more
Caused by: net.sourceforge.nanoxml.XMLParseException: XML Parse Exception during parsing of a jnlp element at line 14: Unknown or invalid entity: &player_name=null">
                    <information>
                        <title>Tank Showdown!</title>
                        <vendor>PäronGlans</vendor>
                        <description>Multiplayer game</description>


                        <offline-allowed></offline-allowed>
                    </information>
                    <security>
                        <all-permissions></all-permissions>
                    </security>
                    <resources><property name="playerInfo" value="{&quot;
    at net.sourceforge.nanoxml.XMLElement.unknownEntity(XMLElement.java:1158)
    at net.sourceforge.nanoxml.XMLElement.resolveEntity(XMLElement.java:1034)
    at net.sourceforge.nanoxml.XMLElement.scanString(XMLElement.java:658)
    at net.sourceforge.nanoxml.XMLElement.scanElement(XMLElement.java:915)
    at net.sourceforge.nanoxml.XMLElement.parseFromReader(XMLElement.java:512)
    at net.sourceforge.nanoxml.XMLElement.parseFromReader(XMLElement.java:464)
    at net.sourceforge.jnlp.Parser.getRootNode(Parser.java:1301)
    ... 10 more


----------------------


    $ curl "http://docs.oracle.com/javase/tutorialJWS/uiswing/painting/ex6/SwingPai
    ntDemo3.jnlp" -i
    HTTP/1.1 200 OK
    Server: Apache
    ETag: "b2f64ff801ed46b37a68e56b32510f33:1327371300"
    Last-Modified: Tue, 24 Jan 2012 00:23:03 GMT
    Accept-Ranges: bytes
    Content-Length: 2363
    Date: Sat, 03 Nov 2012 15:43:06 GMT
    Connection: keep-alive
    Content-Type: application/x-java-jnlp-file
    
    ------------------
    
    
    


21<zartura>21 Squarism, http://docs.scala-lang.org/overviews/core/futures.html
18<zartura> read upon promises
31<Isch>30 ok
21<judkinsstephen>21 Squarism: how long do you plan on keeping a Res "allocated"?
18<zartura> what I suggest is that you have a fifo queue of promises
 stefan-_ StefanQn judkinsstephen stevefink stew stnly 
18<zartura> return futures from those promises
31<Isch>30 judkinsstephen, 5-10 minutes
18<zartura> and when you get a free resource, just fullfill the promise with Res
19* 19miclorb (~miclorb@ppp121-44-115-96.lns20.syd6.internode.on.net) gick in i #scala
18<zartura> and remove it from FIFO queue
19* 19kppullin (~kppullin@pdpc/supporter/active/kppullin) gick in i #scala
21<zartura>21 Squarism, does that make any sense?
23* 23fsvehla har avslutat (23Quit: fsvehla23)
21<judkinsstephen>21 Squarism: what exactly are these "Res" instances? backend connections? do you code to handle a single unique instance for 5 minutes, or can it borrow it for one operation? 
31<Isch>30 arturaz, it does... it feels like a knot has disolved in my brain
19* 19mcclellan (42c0ea9e@gateway/web/freenode/ip.66.192.234.158) gick in i #scala
21<judkinsstephen>21 Squarism: I would really recommend removing "deallocate" entirely
18<zartura> judkinsstephen, why?
18<judkinsstephen> instead making allocate(A => Future[B]):Future[B]
18<judkinsstephen> arturaz: because you'll have to make sure to "deallocate" under all error conditions
18<judkinsstephen> especially when you're dealing with Futures that can be annoying
31<Isch>30 judkinsstephen, its more of an "allowance to spawn a process" 
31<Isch>30 ...Res that is
23* 23Gryffin har avslutat (23Ping timeout: 252 seconds23)
31<Isch>30 thanks alot guys
21<zartura>21 Squarism, judkinsstephen has a point
21<judkinsstephen>21 Squarism: ok, and you can use Futures to tell the pool that you're done with the process
31<Isch>30 ill read up on promises
18<zartura> function style allocation is safer than explicit allocation/deallocation :)
31<Isch>30 ah ok.. 
18<qu1j0t3> loan pattern?
31<Isch>30 ill look into that too
23* 23jsuereth har avslutat (23Quit: Ex-Chat23)
18<zartura> qu1j0t3, +1 :)
18<qu1j0t3> ok, just checking
23* 23milosn har avslutat (23Ping timeout: 248 seconds23)
18<judkinsstephen> that way, you can use "ensure" on the future returned by whatever borrows the process 
 stefan-_ StefanQn judkinsstephen stevefink stew stnly 
 stefan-_ StefanQn judkinsstephen stevefink stew stnly 
31<Isch>30 judkinsstephen, i see what u mean
18<judkinsstephen> qu1j0t3: yeah, I'm recommending using basically the same thing, except with Futures instead of pure functions
23* 23asrail har avslutat (23Ping timeout: 252 seconds23)
23* 23jedws har avslutat (23Quit: Computer has gone to sleep.23)
19* 19_florian_ (~flo@205.233.39.2) gick in i #scala
18<zartura> judkinsstephen, why A => Future[B] and not just (A => B): Future[B] ?
18<_florian_> join #scala
18<zartura> more specifically
18<_florian_> hi - why does the following not compile: def getQueryParams(uri : URI) : Map[String, Option[String]] = {
18<_florian_>     uri.getQuery.split("&").map(_.split("=")).map({ x => if (x.length==2) (x(0),x(1)) else (x(0),None)})
18<_florian_>       .toMap
18<_florian_>   }
18<zartura> allocate(Res => B): Future[B]
18<_florian_> scala thinks that the result is Map[String, Serializable] 
18<judkinsstephen> arturaz: because it's possible you will be doing other async computations with Futures when you borrow the Res
18<zartura> _florian_, what's the error?
19* 19Gryffin (~anoop@cpc3-croy15-0-0-cust386.croy.cable.virginmedia.com) gick in i #scala
18<judkinsstephen> arturaz: and it's trivial to turn A => B to A => Future[B], but impossible to turn A => Future[B] to A => B without blocking a thread
18<_florian_> scala.collection.immutable.Map[java.lang.String,java.io.Serializable]
18<zartura> judkinsstephen, B can be Future[Something], why force the flatmap on it? :)
18<_florian_> found   : scala.collection.immutable.Map[java.lang.String,java.io.Serializable]
18<_florian_>  required: Map[String,Option[String]]
23* 23dekroning har avslutat (23Quit: leaving23)
18<judkinsstephen> arturaz: right, but you're using Futures anyway for this: if you are using any *other* libraries that depend on Futures for IO, if you have A => B you will be forced to block a thread
23* 23lazyshot har avslutat (23Quit: Leaving...23)
18<judkinsstephen> and like I said, turning A => B to A => Future[B] is trivial
18<zartura> _florian_, I'd say else (x(0),None)})
18<zartura> <_florian_>       .toMap
23* 23RRSchulz har avslutat (23Ping timeout: 252 seconds23)
18<zartura> x(0) is a string, None is not
18<_florian_> sure but None fits into Option[String]
18<zartura> but pure String does not
18<_florian_> oh shit
18<_florian_> you're right - my bad :)
18<_florian_> that was silly of me
18<_florian_> :)
18<zartura> judkinsstephen, Promise.pure? :)
18<_florian_> thanks 